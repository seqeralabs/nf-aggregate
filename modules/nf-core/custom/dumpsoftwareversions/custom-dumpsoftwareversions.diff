Changes in module 'nf-core/custom/dumpsoftwareversions'
--- modules/nf-core/custom/dumpsoftwareversions/main.nf
+++ modules/nf-core/custom/dumpsoftwareversions/main.nf
@@ -3,16 +3,13 @@
 
     // Requires `pyyaml` which does not have a dedicated container but is in the MultiQC container
     conda 'modules/nf-core/custom/dumpsoftwareversions/environment.yml'
-    container "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
-        'https://depot.galaxyproject.org/singularity/multiqc:1.15--pyhdfd78af_0' :
-        'biocontainers/multiqc:1.15--pyhdfd78af_0' }"
 
     input:
     path versions
 
     output:
     path "software_versions.yml"    , emit: yml
-    path "software_versions_mqc.yml", emit: mqc_yml
+    path "software_mqc_versions.yml", emit: mqc_yml
     path "versions.yml"             , emit: versions
 
     when:

--- modules/nf-core/custom/dumpsoftwareversions/environment.yml
+++ modules/nf-core/custom/dumpsoftwareversions/environment.yml
@@ -3,4 +3,7 @@
   - bioconda
   - defaults
 dependencies:
-  - bioconda::multiqc=1.15
+  - conda-forge::git=2.42.0
+  - pip
+  - pip:
+    - git+https://github.com/ewels/MultiQC.git

--- modules/nf-core/custom/dumpsoftwareversions/templates/dumpsoftwareversions.py
+++ modules/nf-core/custom/dumpsoftwareversions/templates/dumpsoftwareversions.py
@@ -9,46 +9,6 @@
 from textwrap import dedent
 
 
-def _make_versions_html(versions):
-    """Generate a tabular HTML output of all versions for MultiQC."""
-    html = [
-        dedent(
-            """\\
-            <style>
-            #nf-core-versions tbody:nth-child(even) {
-                background-color: #f2f2f2;
-            }
-            </style>
-            <table class="table" style="width:100%" id="nf-core-versions">
-                <thead>
-                    <tr>
-                        <th> Process Name </th>
-                        <th> Software </th>
-                        <th> Version  </th>
-                    </tr>
-                </thead>
-            """
-        )
-    ]
-    for process, tmp_versions in sorted(versions.items()):
-        html.append("<tbody>")
-        for i, (tool, version) in enumerate(sorted(tmp_versions.items())):
-            html.append(
-                dedent(
-                    f"""\\
-                    <tr>
-                        <td><samp>{process if (i == 0) else ''}</samp></td>
-                        <td><samp>{tool}</samp></td>
-                        <td><samp>{version}</samp></td>
-                    </tr>
-                    """
-                )
-            )
-        html.append("</tbody>")
-    html.append("</table>")
-    return "\\n".join(html)
-
-
 def main():
     """Load all version files and generate merged output."""
     versions_this_module = {}
@@ -58,7 +18,9 @@
     }
 
     with open("$versions") as f:
-        versions_by_process = yaml.load(f, Loader=yaml.BaseLoader) | versions_this_module
+        versions_by_process = (
+            yaml.load(f, Loader=yaml.BaseLoader) | versions_this_module
+        )
 
     # aggregate versions by the module name (derived from fully-qualified process name)
     versions_by_module = {}
@@ -79,20 +41,10 @@
         "$workflow.manifest.name": "$workflow.manifest.version",
     }
 
-    versions_mqc = {
-        "id": "software_versions",
-        "section_name": "${workflow.manifest.name} Software Versions",
-        "section_href": "https://github.com/${workflow.manifest.name}",
-        "plot_type": "html",
-        "description": "are collected at run time from the software output.",
-        "data": _make_versions_html(versions_by_module),
-    }
-
     with open("software_versions.yml", "w") as f:
         yaml.dump(versions_by_module, f, default_flow_style=False)
-    with open("software_versions_mqc.yml", "w") as f:
-        yaml.dump(versions_mqc, f, default_flow_style=False)
-
+    with open("software_mqc_versions.yml", "w") as f:
+        yaml.dump(versions_by_module, f, default_flow_style=False)
     with open("versions.yml", "w") as f:
         yaml.dump(versions_this_module, f, default_flow_style=False)
 

************************************************************
